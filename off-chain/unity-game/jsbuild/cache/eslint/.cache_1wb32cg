[{"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/pages/_app.tsx":"1","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/pages/index.tsx":"2","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Burn.tsx":"3","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/BurnCoin.tsx":"4","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Clone.tsx":"5","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Disconnect.tsx":"6","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/ErrorMessage.tsx":"7","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Fund.tsx":"8","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/MergeCoins.tsx":"9","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Mint.tsx":"10","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/MintCoin.tsx":"11","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Modify.tsx":"12","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/PrimaryButton.tsx":"13","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Sign.tsx":"14","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/SignTransaction.tsx":"15","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/SuccessMessage.tsx":"16","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Transfer.tsx":"17","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Transfer2.tsx":"18","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/WalletActions.tsx":"19","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/index.ts":"20","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/lib/constants.ts":"21"},{"size":849,"mtime":1688707254298,"results":"22","hashOfConfig":"23"},{"size":549,"mtime":1688707486024,"results":"24","hashOfConfig":"23"},{"size":2842,"mtime":1688658520557,"results":"25","hashOfConfig":"23"},{"size":2874,"mtime":1688658520557,"results":"26","hashOfConfig":"23"},{"size":2717,"mtime":1688658520557,"results":"27","hashOfConfig":"23"},{"size":459,"mtime":1688658520561,"results":"28","hashOfConfig":"23"},{"size":543,"mtime":1688658520561,"results":"29","hashOfConfig":"23"},{"size":1915,"mtime":1688658520561,"results":"30","hashOfConfig":"23"},{"size":2686,"mtime":1688658520561,"results":"31","hashOfConfig":"23"},{"size":2537,"mtime":1688658520561,"results":"32","hashOfConfig":"23"},{"size":2478,"mtime":1688658520561,"results":"33","hashOfConfig":"23"},{"size":3094,"mtime":1688658520561,"results":"34","hashOfConfig":"23"},{"size":427,"mtime":1688658520561,"results":"35","hashOfConfig":"23"},{"size":2565,"mtime":1688658520561,"results":"36","hashOfConfig":"23"},{"size":2158,"mtime":1688658520561,"results":"37","hashOfConfig":"23"},{"size":596,"mtime":1688658520561,"results":"38","hashOfConfig":"23"},{"size":2826,"mtime":1688658520561,"results":"39","hashOfConfig":"23"},{"size":3041,"mtime":1688658520561,"results":"40","hashOfConfig":"23"},{"size":1091,"mtime":1688658520561,"results":"41","hashOfConfig":"23"},{"size":792,"mtime":1688658520561,"results":"42","hashOfConfig":"23"},{"size":475,"mtime":1688658520561,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p1ncc9",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/pages/_app.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/pages/index.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Burn.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/BurnCoin.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Clone.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Disconnect.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/ErrorMessage.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Fund.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/MergeCoins.tsx",["110"],[],"import { useCallback, useEffect, useState } from 'react'\nimport { ethos, TransactionBlock } from 'ethos-connect'\nimport { ErrorMessage, SuccessMessage } from '.';\n\nconst MergeCoins = () => {\n    const { wallet } = ethos.useWallet();\n    const [mergedCoinId, setMergedCoinId] = useState<string | undefined>();\n    const [error, setError] = useState<string | undefined>()\n\n    const mergeCoins = useCallback(async () => {\n    //     if (!wallet) return;\n        \n    //     let inputCoins = wallet.contents.tokens['0x2::sui::SUI'].coins.map((c: any) => c.objectId)\n    //     if (inputCoins.length < 3) {\n    //         setError(\"You don't have enough coins to merge them.\")\n    //         return;\n    //     } else {\n    //         console.log(\"inputCoins0\", inputCoins);\n    //         inputCoins = inputCoins.slice(0, (inputCoins.length + 1) / 2)\n    //     }\n    //     console.log(\"inputCoins\", inputCoins);\n\n    //     try {\n    //       const payTransaction = {\n    //         kind: \"payAllSui\" as const,\n    //         data: {\n    //           inputCoins,\n    //           recipient: wallet.address,\n    //           gasBudget: 1000,\n    //         },\n    //       };\n    \n    //       const response = await wallet.signAndExecuteTransaction(payTransaction);\n    //       const mergedCoinId = response.effects.mutated?.[0]?.reference?.objectId;\n    //       setMergedCoinId(mergedCoinId);\n    //     } catch (error) {\n    //       console.log(error);\n    //     }\n    }, [wallet]);\n\n    const reset = useCallback(() => {\n        setError(undefined)\n        setMergedCoinId(undefined)\n    }, [])\n\n    useEffect(() => {\n        reset();\n    }, [reset])\n\n    return (\n        <div className='flex flex-col gap-6'>\n            {mergedCoinId && (\n                <SuccessMessage reset={reset}>\n                    <a \n                        href={`https://explorer.sui.io/objects/${mergedCoinId}?network=testnet`}\n                        target=\"_blank\" \n                        rel=\"noreferrer\"\n                        className='underline font-blue-600' \n                    >\n                        View your merged coin on the Sui Explorer\n                    </a>\n                </SuccessMessage>\n            )}\n            {error && (\n                <ErrorMessage reset={reset}>\n                    {error}\n                </ErrorMessage>\n            )}\n            <button\n                className=\"mx-auto px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\n                onClick={mergeCoins}\n            >\n                Merge Coins\n            </button>\n        </div>\n    )\n}\n\nexport default MergeCoins;","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Mint.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/MintCoin.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Modify.tsx",["111"],[],"import { useCallback, useEffect, useState } from 'react'\nimport { ethos } from 'ethos-connect'\nimport { ETHOS_EXAMPLE_CONTRACT } from '../lib/constants'\nimport SuccessMessage from './SuccessMessage';\n\nconst Modify = () => {\n    const { wallet } = ethos.useWallet();\n    const [nftObjectId, setNftObjectId] = useState<string | null>(null);\n\n    const mintAndModify = useCallback(async () => {\n        // if (!wallet) return;\n    \n        // try {\n        //   const transaction = {\n        //     kind: \"moveCall\" as const,\n        //     data: {\n        //       packageObjectId: ETHOS_EXAMPLE_CONTRACT,\n        //       module: \"example\",\n        //       function: \"mint\",\n        //       typeArguments: [],\n        //       arguments: [],\n        //       gasBudget: 10000,\n        //     },\n        //   };\n    \n        //   const response = await wallet.signAndExecuteTransaction(transaction);\n        //   if (response?.effects?.events) {\n        //     const newObjectEvent = response.effects.events.find(\n        //       (e) => ('newObject' in e)\n        //     );\n        //     if (!newObjectEvent || !('newObject' in newObjectEvent)) return;\n\n        //     const { newObject: { objectId } } = newObjectEvent;\n            \n        //     const moveTransaction = {\n        //         kind: \"moveCall\" as const,\n        //         data: {\n        //           packageObjectId: ETHOS_EXAMPLE_CONTRACT,\n        //           module: \"example\",\n        //           function: \"modify\",\n        //           typeArguments: [],\n        //           arguments: [\n        //             objectId, \n        //             \"What's up?\"\n        //           ],\n        //           gasBudget: 10000,\n        //         },\n        //     };\n\n        //     const moveResponse = await wallet.signAndExecuteTransaction(moveTransaction);\n        //     console.log(\"moveResponse\", moveResponse)\n        //     setNftObjectId(objectId);\n        //   }  \n        // } catch (error) {\n        //   console.log(error);\n        // }\n    }, [wallet]);\n\n    const reset = useCallback(() => {\n        setNftObjectId(null)\n    }, [])\n\n    useEffect(() => {\n        reset();\n    }, [reset])\n\n    return (\n        <div className='flex flex-col gap-6'>\n            {nftObjectId && (\n                <SuccessMessage reset={reset}>\n                    <a \n                        href={`https://explorer.sui.io/objects/${nftObjectId}?network=testnet`}\n                        target=\"_blank\" \n                        rel=\"noreferrer\"\n                        className='underline font-blue-600' \n                    >\n                        View the NFT you created and modified on the TestNet Explorer \n                    </a>\n                </SuccessMessage>\n              )}\n              <button\n                className=\"mx-auto px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\n                onClick={mintAndModify}\n              >\n                Mint and Modify\n              </button>\n          </div>\n    )\n}\n\nexport default Modify;","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/PrimaryButton.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Sign.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/SignTransaction.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/SuccessMessage.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Transfer.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/Transfer2.tsx",["112"],[],"import { useCallback, useEffect, useState } from 'react'\nimport { ethos } from 'ethos-connect'\nimport { SuccessMessage } from '.';\nimport { ETHOS_EXAMPLE_CONTRACT } from '../lib/constants';\n\nconst Transfer2 = () => {\n    const { wallet } = ethos.useWallet();\n    const [nftObjectId, setNftObjectId] = useState<string | null>(null);\n\n    const mintAndTransfer2 = useCallback(async () => {\n        // if (!wallet) return;\n    \n        // try {\n        //   const mintTransaction = {\n        //     kind: \"moveCall\" as const,\n        //     data: {\n        //       packageObjectId: ETHOS_EXAMPLE_CONTRACT,\n        //       module: \"example\",\n        //       function: \"mint\",\n        //       typeArguments: [],\n        //       arguments: [],\n        //       gasBudget: 10000,\n        //     },\n        //   };\n    \n        //   const response = await wallet.signAndExecuteTransaction(mintTransaction);\n        //   if (response?.effects?.events) {\n        //     const newObjectEvent = response.effects.events.find(\n        //       (e) => ('newObject' in e)\n        //     );\n        //     if (!newObjectEvent || !('newObject' in newObjectEvent)) return;\n\n        //     const { newObject: { objectId } } = newObjectEvent;\n            \n        //     const transferTransaction = {\n        //       kind: \"moveCall\" as const,\n        //       data: {\n        //         packageObjectId: ETHOS_EXAMPLE_CONTRACT,\n        //         module: \"example\",\n        //         function: \"transfer\",\n        //         typeArguments: [],\n        //         arguments: [\n        //           objectId,\n        //           \"0x14405eaed227abf06d7368be6501fecf0f6430d1\"\n        //         ],\n        //         gasBudget: 10000,\n        //       },\n        //     };\n\n        //     await wallet.signAndExecuteTransaction(transferTransaction);\n        //     setNftObjectId(objectId);\n        //   }  \n        // } catch (error) {\n        //   console.log(error);\n        // }\n    }, [wallet]);\n\n    const reset = useCallback(() => {\n        setNftObjectId(null)\n    }, [])\n\n    useEffect(() => {\n        reset();\n    }, [reset]);\n\n    return (\n        <div className='flex flex-col gap-6'>\n            {nftObjectId && (\n                <SuccessMessage reset={reset}>\n                    <a \n                        href={`https://explorer.sui.io/objects/${nftObjectId}?network=testnet`}\n                        target=\"_blank\" \n                        rel=\"noreferrer\"\n                        className='underline font-blue-600' \n                    >\n                        View the NFT you created and transferred on the TestNet Explorer \n                    </a>\n                </SuccessMessage>\n            )}\n            <button\n                className=\"mx-auto px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\n                onClick={mintAndTransfer2}\n            >\n                Mint and Transfer 2\n            </button>\n        </div>\n    )\n}\n\nexport default Transfer2;","/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/WalletActions.tsx",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/components/index.ts",[],[],"/home/acer/Desktop/Soundbeats/ethos-example/ethos-example-app/lib/constants.ts",[],[],{"ruleId":"113","severity":1,"message":"114","line":39,"column":8,"nodeType":"115","endLine":39,"endColumn":16,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"114","line":57,"column":8,"nodeType":"115","endLine":57,"endColumn":16,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":56,"column":8,"nodeType":"115","endLine":56,"endColumn":16,"suggestions":"118"},"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'wallet'. Either exclude it or remove the dependency array.","ArrayExpression",["119"],["120"],["121"],{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},{"desc":"122","fix":"125"},"Update the dependencies array to be: []",{"range":"126","text":"127"},{"range":"128","text":"127"},{"range":"129","text":"127"},[1477,1485],"[]",[2031,2039],[1974,1982]]